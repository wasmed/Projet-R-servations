server:
  port: 8082

  #apiPrefix: /dev

logging:
  level:
    root: INFO #DEBUG #TRACE #WARN #ERROR #FATAL #OFF

  file:
    name: ${logging.file.path}/${spring.application.name}.log
    path: /tmp/${spring.application.name}/${spring.profiles.active}/log/

  logback:
    rollingpolicy:
      max-file-size: 100MB
      file-name-pattern: ${logging.file.path}\\${spring.application.name}-%d{yyyy-MM-dd}.%i.log.zip
      max-history: 50

spring:
  # DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:/tmp/${spring.application.name}/${spring.profiles.active}/Database/h2/reservations;DATABASE_TO_LOWER=TRUE;MODE=MySQL;CASE_INSENSITIVE_IDENTIFIERS=TRUE #DB_CLOSE_ON_EXIT=TRUE
    username: sa
    password:

    tomcat:
      testOnBorrow: true

  h2:
    console:
      enabled: true

  # Hibernate

  # The SQL dialect makes Hibernate generate better SQL for the chosen database
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

        # Hibernate ddl auto (create, create-drop, validate, update)
        ddl-auto: none
        use_second_level_cache: true
        show_sql: true
        format_sql: true

  #sql:
  #  init:
  #    data-locations: classpath:sql/resetProcessing.sql
  #    mode: always #never

  flyway:
    enabled: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    locations: classpath:db/migration
    baseline-on-migrate: true
    fail-on-missing-locations: true